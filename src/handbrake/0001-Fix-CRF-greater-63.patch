From d60a7e053b2a874fcc9f38d79287b151edb80878 Mon Sep 17 00:00:00 2001
From: Vince JV <1276544+vincejv@users.noreply.github.com>
Date: Fri, 19 Apr 2024 14:52:10 +0800
Subject: [PATCH] Fix CRF greater 63

---
 libhb/encsvtav1.c | 14 +++++++++++---
 1 file changed, 11 insertions(+), 3 deletions(-)

diff --git a/libhb/encsvtav1.c b/libhb/encsvtav1.c
index 70d904a17..c6866d695 100644
--- a/libhb/encsvtav1.c
+++ b/libhb/encsvtav1.c
@@ -22,6 +22,7 @@ int  encsvtWork(hb_work_object_t *, hb_buffer_t **, hb_buffer_t **);
 void encsvtClose(hb_work_object_t *);
 
 #define FRAME_INFO_SIZE 2048
+#define MAX_QP_VALUE 63
 #define FRAME_INFO_MASK (FRAME_INFO_SIZE - 1)
 
 hb_work_object_t hb_encsvtav1 =
@@ -89,9 +90,16 @@ static int alloc_buffer(EbSvtAv1EncConfiguration *config, hb_work_private_t *pv)
 }
 
 void set_extended_crf(EbSvtAv1EncConfiguration *param, double vquality) {
-    double decimalPart                = vquality - (int)vquality; // Get the decimal part
-    param->qp                         = vquality; // truncated automatically
-    param->extended_crf_qindex_offset = decimalPart / 25;
+    if (vquality <= MAX_QP_VALUE) // for crf <= 63
+    {
+        double decimalPart                = vquality - (int)vquality; // Get the decimal part
+        param->qp                         = vquality; // truncated automatically
+        param->extended_crf_qindex_offset = decimalPart / 25;
+    } else // extended crf
+    {
+        param->qp                         = MAX_QP_VALUE;
+        param->extended_crf_qindex_offset = (vquality - MAX_QP_VALUE) * 4
+    }
 }
 
 int encsvtInit(hb_work_object_t *w, hb_job_t *job)
-- 
2.34.1

