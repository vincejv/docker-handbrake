From b3e2ca4802676adc450c237b48ca1068b6675201 Mon Sep 17 00:00:00 2001
From: Vince JV <1276544+vincejv@users.noreply.github.com>
Date: Wed, 17 Apr 2024 05:09:25 +0800
Subject: [PATCH] x264 and x265 upgrades

---
 contrib/x264/A00-version-string.patch   |  4 +--
 contrib/x264/module.defs                |  4 +--
 contrib/x265/A00-crosscompile-fix.patch | 19 -----------
 contrib/x265/A06-crosscompile-fix.patch | 42 +++++++++++++++++++++++++
 contrib/x265/module.defs                |  5 +--
 contrib/x265_10bit/module.defs          | 19 +++--------
 contrib/x265_12bit/module.defs          | 19 +++--------
 contrib/x265_8bit/module.defs           | 13 +++-----
 8 files changed, 64 insertions(+), 61 deletions(-)
 delete mode 100644 contrib/x265/A00-crosscompile-fix.patch
 create mode 100644 contrib/x265/A06-crosscompile-fix.patch

diff --git a/contrib/x264/A00-version-string.patch b/contrib/x264/A00-version-string.patch
index a7a59c6c5..52eb8f863 100644
--- a/contrib/x264/A00-version-string.patch
+++ b/contrib/x264/A00-version-string.patch
@@ -23,8 +23,8 @@ index d685efbd..7f270c4b 100644
 +#undef  X264_POINTVER
 +#endif
 +#define X264_BUILD 164
-+#define X264_VERSION " r3107 a8b68ebf"
-+#define X264_POINTVER "0.164.3107 a8b68ebf"
++#define X264_VERSION " r3186 585e0199"
++#define X264_POINTVER "0.164.3186 585e0199"
  
  #ifdef _WIN32
  #   define X264_DLL_IMPORT __declspec(dllimport)
diff --git a/contrib/x264/module.defs b/contrib/x264/module.defs
index 672003140..49e950d5b 100644
--- a/contrib/x264/module.defs
+++ b/contrib/x264/module.defs
@@ -1,8 +1,8 @@
 $(eval $(call import.MODULE.defs,X264,x264))
 $(eval $(call import.CONTRIB.defs,X264))
 
-X264.FETCH.url     = https://github.com/HandBrake/HandBrake-contribs/releases/download/contribs/x264-snapshot-20230402-3107.tar.gz
-X264.FETCH.sha256  = d16a9a55d87f0bb0217c4fb2246748ea00859514b8eef5e8d5d4279cd53d3be9
+X264.FETCH.url     = https://github.com/HandBrake/HandBrake-contribs/releases/download/contribs/x264-snapshot-20240314-3186.tar.gz
+X264.FETCH.sha256  = e7f4311f6f84bcbf6587dcfc9a41c7459f4f0f7d8c0153270749947e41255b60
 
 X264.GCC.args.c_std =
 
diff --git a/contrib/x265/A00-crosscompile-fix.patch b/contrib/x265/A00-crosscompile-fix.patch
deleted file mode 100644
index 38b270205..000000000
--- a/contrib/x265/A00-crosscompile-fix.patch
+++ /dev/null
@@ -1,19 +0,0 @@
-diff --git a/source/CMakeLists.txt b/source/CMakeLists.txt
-index 60031df63..7120f9414 100755
---- a/source/CMakeLists.txt
-+++ b/source/CMakeLists.txt
-@@ -260,7 +260,13 @@ if(GCC)
-         endif()
-     endif()
- 	if(ARM64 OR CROSS_COMPILE_ARM64)
--	    set(ARM_ARGS -fPIC -flax-vector-conversions)
-+        if (MINGW)
-+            set(ARM_ARGS -flax-vector-conversions)
-+        elseif(APPLE)
-+            set(ARM_ARGS -fPIC -flax-vector-conversions -arch ${CMAKE_OSX_ARCHITECTURES})
-+        else()
-+            set(ARM_ARGS -fPIC -flax-vector-conversions)
-+        endif()
-         find_package(Neon)
-         if(CPU_HAS_NEON)
-             add_definitions(-DHAVE_NEON)
diff --git a/contrib/x265/A06-crosscompile-fix.patch b/contrib/x265/A06-crosscompile-fix.patch
new file mode 100644
index 000000000..9cb678fef
--- /dev/null
+++ b/contrib/x265/A06-crosscompile-fix.patch
@@ -0,0 +1,42 @@
+diff --git a/source/CMakeLists.txt b/source/CMakeLists.txt
+index ab5ddfeb7..88693a3da 100755
+--- a/source/CMakeLists.txt
++++ b/source/CMakeLists.txt
+@@ -80,12 +80,13 @@ elseif(ARMMATCH GREATER "-1")
+     set(ARM 1)
+     add_definitions(-DX265_ARCH_ARM=1 -DHAVE_ARMV6=1)
+ elseif(ARM64MATCH GREATER "-1")
+-    #if(CROSS_COMPILE_ARM64)
+-        #message(STATUS "Cross compiling for ARM64 arch")
+-    #else()
+-        #set(CROSS_COMPILE_ARM64 0)
+-    #endif()
+-    message(STATUS "Detected ARM64 target processor")
++    list(FIND ARM64_ALIASES "${CMAKE_HOST_SYSTEM_PROCESSOR}" NATIVE_ARCH)
++    if(NATIVE_ARCH EQUAL "-1")
++        message(STATUS "Cross compiling for ARM64 arch")
++        set(CROSS_COMPILE_ARM64 1)
++    else()
++        set(CROSS_COMPILE_ARM64 0)
++    endif()
+     set(ARM64 1)
+     add_definitions(-DX265_ARCH_ARM64=1 -DHAVE_NEON)
+ else()
+@@ -274,9 +275,15 @@ if(GCC)
+             set(ARM_ARGS -O3 -march=armv8-a+sve -fPIC -flax-vector-conversions)
+             add_definitions(-DHAVE_SVE)
+             add_definitions(-DHAVE_NEON) # for NEON c/c++ primitives, as currently there is no implementation that use SVE
+-        elseif(CPU_HAS_NEON)
++        elseif(CPU_HAS_NEON OR CROSS_COMPILE_ARM64)
+             message(STATUS "Found NEON")
+-            set(ARM_ARGS -fPIC -flax-vector-conversions)
++            if (MINGW)
++                set(ARM_ARGS -flax-vector-conversions)
++            elseif(APPLE)
++                set(ARM_ARGS -fPIC -flax-vector-conversions -arch ${CMAKE_OSX_ARCHITECTURES})
++            else()
++                set(ARM_ARGS -fPIC -flax-vector-conversions)
++            endif()
+             add_definitions(-DHAVE_NEON)
+         else()
+             set(ARM_ARGS -fPIC -flax-vector-conversions)
diff --git a/contrib/x265/module.defs b/contrib/x265/module.defs
index 893de9e71..637d2310f 100644
--- a/contrib/x265/module.defs
+++ b/contrib/x265/module.defs
@@ -2,8 +2,9 @@ __deps__ := X265_8 X265_10 X265_12
 $(eval $(call import.MODULE.defs,X265,x265,$(__deps__)))
 $(eval $(call import.CONTRIB.defs,X265))
 
-X265.FETCH.url     = https://github.com/HandBrake/HandBrake-contribs/releases/download/contribs/x265-snapshot-20230403-12776.tar.gz
-X265.FETCH.sha256  = 23898695c5520e9e971d12e88125d5ad03ad67f462fc8ecaa016b48adad7cb20
+X265.FETCH.url     = https://github.com/HandBrake/HandBrake-contribs/releases/download/contribs/x265_3.6.tar.gz
+X265.FETCH.url    += https://bitbucket.org/multicoreware/x265_git/downloads/x265_3.6.tar.gz
+X265.FETCH.sha256  = 663531f341c5389f460d730e62e10a4fcca3428ca2ca109693867bc5fe2e2807
 
 # Silence "warning: overriding recipe for target" messages
 X265.FETCH.target =
diff --git a/contrib/x265_10bit/module.defs b/contrib/x265_10bit/module.defs
index c8314bb28..03698e5df 100644
--- a/contrib/x265_10bit/module.defs
+++ b/contrib/x265_10bit/module.defs
@@ -2,8 +2,9 @@ __deps__ := X265_8
 $(eval $(call import.MODULE.defs,X265_10,x265_10,$(__deps__),x265))
 $(eval $(call import.CONTRIB.defs,X265_10))
 
-X265_10.FETCH.url     = https://github.com/HandBrake/HandBrake-contribs/releases/download/contribs/x265-snapshot-20230403-12776.tar.gz
-X265_10.FETCH.sha256  = 23898695c5520e9e971d12e88125d5ad03ad67f462fc8ecaa016b48adad7cb20
+X265_10.FETCH.url     = https://github.com/HandBrake/HandBrake-contribs/releases/download/contribs/x265_3.6.tar.gz
+X265_10.FETCH.url    += https://bitbucket.org/multicoreware/x265_git/downloads/x265_3.6.tar.gz
+X265_10.FETCH.sha256  = 663531f341c5389f460d730e62e10a4fcca3428ca2ca109693867bc5fe2e2807
 
 # Silence "warning: overriding recipe for target" messages
 X265_10.FETCH.target =
@@ -11,6 +12,7 @@ X265_10.FETCH.target =
 X265_10.build_dir             = 10bit
 X265_10.CONFIGURE.exe         = cmake
 X265_10.CONFIGURE.args.prefix = -DCMAKE_INSTALL_PREFIX="$(X265_10.CONFIGURE.prefix)"
+X265_10.CONFIGURE.args.host   = -DCMAKE_HOST_SYSTEM="$(X265_10.CONFIGURE.build)"
 X265_10.CONFIGURE.deps        =
 X265_10.CONFIGURE.static      =
 X265_10.CONFIGURE.shared      = -DENABLE_SHARED=OFF
@@ -51,22 +53,11 @@ ifeq (1,$(HOST.cross))
         X265_10.CONFIGURE.extra += -DWIN32=ON
         X265_10.CONFIGURE.extra += -DCMAKE_SYSTEM_NAME=Windows
         X265_10.CONFIGURE.extra += -DCMAKE_C_COMPILER=$(X265_10.GCC.gcc)
-        X265_10.CONFIGURE.extra += -DCMAKE_C_FLAGS="-static-libgcc -static-libstdc++ -static"
-        X265_10.CONFIGURE.extra += -DCMAKE_SHARED_LIBRARY_LINK_C_FLAGS="-static-libgcc -static-libstdc++ -static"
         X265_10.CONFIGURE.extra += -DCMAKE_CXX_COMPILER=$(X265_10.GCC.gxx)
-        X265_10.CONFIGURE.extra += -DCMAKE_CXX_FLAGS="-static-libgcc -static-libstdc++ -static"
-        X265_10.CONFIGURE.extra += -DCMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS="-static-libgcc -static-libstdc++ -static"
         X265_10.CONFIGURE.extra += -DCMAKE_RC_COMPILER=$(HOST.cross.prefix)windres
         X265_10.CONFIGURE.args.host  = -DCMAKE_HOST_SYSTEM="$(X265_10.CONFIGURE.host)"
-    else ifeq ($(HOST.system),darwin)
-        X265_10.CONFIGURE.args.host  = -DCMAKE_HOST_SYSTEM="$(X265_10.CONFIGURE.host)"
-    else
-        X265_10.CONFIGURE.args.host = -DCMAKE_SYSTEM_NAME="$(X265_10.CONFIGURE.host)"
     endif
-    X265_10.CONFIGURE.args.build = -DCMAKE_HOST_SYSTEM="$(X265_10.CONFIGURE.build)"
-    X265_10.CONFIGURE.extra     += -DCMAKE_SYSTEM_PROCESSOR=$(HOST.machine)
-else
-    X265_10.CONFIGURE.args.host  = -DCMAKE_HOST_SYSTEM="$(X265_10.CONFIGURE.host)"
+    X265_10.CONFIGURE.args.build = -DCMAKE_SYSTEM_PROCESSOR=$(HOST.machine)
 endif
 
 ## find CMakeLists.txt
diff --git a/contrib/x265_12bit/module.defs b/contrib/x265_12bit/module.defs
index 30fa1c5e6..56ca88d69 100644
--- a/contrib/x265_12bit/module.defs
+++ b/contrib/x265_12bit/module.defs
@@ -2,8 +2,9 @@ __deps__ := X265_8
 $(eval $(call import.MODULE.defs,X265_12,x265_12,$(__deps__),x265))
 $(eval $(call import.CONTRIB.defs,X265_12))
 
-X265_12.FETCH.url     = https://github.com/HandBrake/HandBrake-contribs/releases/download/contribs/x265-snapshot-20230403-12776.tar.gz
-X265_12.FETCH.sha256  = 23898695c5520e9e971d12e88125d5ad03ad67f462fc8ecaa016b48adad7cb20
+X265_12.FETCH.url     = https://github.com/HandBrake/HandBrake-contribs/releases/download/contribs/x265_3.6.tar.gz
+X265_12.FETCH.url    += https://bitbucket.org/multicoreware/x265_git/downloads/x265_3.6.tar.gz
+X265_12.FETCH.sha256  = 663531f341c5389f460d730e62e10a4fcca3428ca2ca109693867bc5fe2e2807
 
 # Silence "warning: overriding recipe for target" messages
 X265_12.FETCH.target =
@@ -11,6 +12,7 @@ X265_12.FETCH.target =
 X265_12.build_dir             = 12bit
 X265_12.CONFIGURE.exe         = cmake
 X265_12.CONFIGURE.args.prefix = -DCMAKE_INSTALL_PREFIX="$(X265_12.CONFIGURE.prefix)"
+X265_12.CONFIGURE.args.host   = -DCMAKE_HOST_SYSTEM="$(X265_12.CONFIGURE.build)"
 X265_12.CONFIGURE.deps        =
 X265_12.CONFIGURE.static      =
 X265_12.CONFIGURE.shared      = -DENABLE_SHARED=OFF
@@ -51,22 +53,11 @@ ifeq (1,$(HOST.cross))
         X265_12.CONFIGURE.extra += -DWIN32=ON
         X265_12.CONFIGURE.extra += -DCMAKE_SYSTEM_NAME=Windows
         X265_12.CONFIGURE.extra += -DCMAKE_C_COMPILER=$(X265_12.GCC.gcc)
-        X265_12.CONFIGURE.extra += -DCMAKE_C_FLAGS="-static-libgcc -static-libstdc++ -static"
-        X265_12.CONFIGURE.extra += -DCMAKE_SHARED_LIBRARY_LINK_C_FLAGS="-static-libgcc -static-libstdc++ -static"
         X265_12.CONFIGURE.extra += -DCMAKE_CXX_COMPILER=$(X265_12.GCC.gxx)
-        X265_12.CONFIGURE.extra += -DCMAKE_CXX_FLAGS="-static-libgcc -static-libstdc++ -static"
-        X265_12.CONFIGURE.extra += -DCMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS="-static-libgcc -static-libstdc++ -static"
         X265_12.CONFIGURE.extra += -DCMAKE_RC_COMPILER=$(HOST.cross.prefix)windres
         X265_12.CONFIGURE.args.host  = -DCMAKE_HOST_SYSTEM="$(X265_12.CONFIGURE.host)"
-    else ifeq ($(HOST.system),darwin)
-        X265_12.CONFIGURE.args.host  = -DCMAKE_HOST_SYSTEM="$(X265_12.CONFIGURE.host)"
-    else
-        X265_12.CONFIGURE.args.host = -DCMAKE_SYSTEM_NAME="$(X265_12.CONFIGURE.host)"
     endif
-    X265_12.CONFIGURE.args.build = -DCMAKE_HOST_SYSTEM="$(X265_12.CONFIGURE.build)"
-    X265_12.CONFIGURE.extra     += -DCMAKE_SYSTEM_PROCESSOR=$(HOST.machine)
-else
-    X265_12.CONFIGURE.args.host  = -DCMAKE_HOST_SYSTEM="$(X265_12.CONFIGURE.host)"
+    X265_12.CONFIGURE.args.build = -DCMAKE_SYSTEM_PROCESSOR=$(HOST.machine)
 endif
 
 ## find CMakeLists.txt
diff --git a/contrib/x265_8bit/module.defs b/contrib/x265_8bit/module.defs
index 688c8ce18..572a3066d 100644
--- a/contrib/x265_8bit/module.defs
+++ b/contrib/x265_8bit/module.defs
@@ -2,12 +2,14 @@ __deps__ :=
 $(eval $(call import.MODULE.defs,X265_8,x265_8,$(__deps__),x265))
 $(eval $(call import.CONTRIB.defs,X265_8))
 
-X265_8.FETCH.url     = https://github.com/HandBrake/HandBrake-contribs/releases/download/contribs/x265-snapshot-20230403-12776.tar.gz
-X265_8.FETCH.sha256  = 23898695c5520e9e971d12e88125d5ad03ad67f462fc8ecaa016b48adad7cb20
+X265_8.FETCH.url     = https://github.com/HandBrake/HandBrake-contribs/releases/download/contribs/x265_3.6.tar.gz
+X265_8.FETCH.url    += https://bitbucket.org/multicoreware/x265_git/downloads/x265_3.6.tar.gz
+X265_8.FETCH.sha256  = 663531f341c5389f460d730e62e10a4fcca3428ca2ca109693867bc5fe2e2807
 
 X265_8.build_dir             = 8bit
 X265_8.CONFIGURE.exe         = cmake
 X265_8.CONFIGURE.args.prefix = -DCMAKE_INSTALL_PREFIX="$(X265_8.CONFIGURE.prefix)"
+X265_8.CONFIGURE.args.host   = -DCMAKE_HOST_SYSTEM="$(X265_8.CONFIGURE.build)"
 X265_8.CONFIGURE.deps        =
 X265_8.CONFIGURE.static      =
 X265_8.CONFIGURE.shared      = -DENABLE_SHARED=OFF
@@ -49,16 +51,11 @@ ifeq (1,$(HOST.cross))
         X265_8.CONFIGURE.extra += -DWIN32=ON
         X265_8.CONFIGURE.extra += -DCMAKE_SYSTEM_NAME=Windows
         X265_8.CONFIGURE.extra += -DCMAKE_C_COMPILER=$(X265_8.GCC.gcc)
-        X265_8.CONFIGURE.extra += -DCMAKE_C_FLAGS="-static-libgcc -static-libstdc++ -static"
-        X265_8.CONFIGURE.extra += -DCMAKE_SHARED_LIBRARY_LINK_C_FLAGS="-static-libgcc -static-libstdc++ -static"
         X265_8.CONFIGURE.extra += -DCMAKE_CXX_COMPILER=$(X265_8.GCC.gxx)
-        X265_8.CONFIGURE.extra += -DCMAKE_CXX_FLAGS="-static-libgcc -static-libstdc++ -static"
-        X265_8.CONFIGURE.extra += -DCMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS="-static-libgcc -static-libstdc++ -static"
         X265_8.CONFIGURE.extra += -DCMAKE_RC_COMPILER=$(HOST.cross.prefix)windres
         X265_8.CONFIGURE.args.host  = -DCMAKE_HOST_SYSTEM="$(X265_8.CONFIGURE.host)"
     endif
-    X265_8.CONFIGURE.args.build = -DCMAKE_HOST_SYSTEM="$(X265_8.CONFIGURE.build)"
-    X265_8.CONFIGURE.extra     += -DCMAKE_SYSTEM_PROCESSOR=$(HOST.machine)
+    X265_8.CONFIGURE.args.build = -DCMAKE_SYSTEM_PROCESSOR=$(HOST.machine)
 endif
 
 ## find CMakeLists.txt
-- 
2.34.1

