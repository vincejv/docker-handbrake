From b820755b05a0f19bdeeb2d8b2bef082edf2c9cfd Mon Sep 17 00:00:00 2001
From: Damiano Galassi <damiog@gmail.com>
Date: Thu, 14 Mar 2024 08:07:21 +0100
Subject: [PATCH] contrib: update SVT-AV1 to version 2.0.0.

---
 ...g-Use-Libs.private-in-pkg-config-fil.patch | 41 ---------
 .../A01-sad8xhx4d_neon-crash-fix.patch        | 42 ----------
 contrib/svt-av1/module.defs                   |  6 +-
 libhb/common.c                                |  4 -
 libhb/encsvtav1.c                             | 83 ++++++++-----------
 5 files changed, 37 insertions(+), 139 deletions(-)
 delete mode 100644 contrib/svt-av1/A00-Revert-pkg-config-Use-Libs.private-in-pkg-config-fil.patch
 delete mode 100644 contrib/svt-av1/A01-sad8xhx4d_neon-crash-fix.patch

diff --git a/contrib/svt-av1/A00-Revert-pkg-config-Use-Libs.private-in-pkg-config-fil.patch b/contrib/svt-av1/A00-Revert-pkg-config-Use-Libs.private-in-pkg-config-fil.patch
deleted file mode 100644
index c4d317120f36..000000000000
--- a/contrib/svt-av1/A00-Revert-pkg-config-Use-Libs.private-in-pkg-config-fil.patch
+++ /dev/null
@@ -1,41 +0,0 @@
-From 48046924c192ec469d399196869ab49227a3f41b Mon Sep 17 00:00:00 2001
-From: Damiano galassi <damiog@gmail.com>
-Date: Thu, 1 Dec 2022 15:42:05 +0100
-Subject: [PATCH] Revert "pkg-config: Use Libs.private in pkg-config files for
- LIBS_PRIVATE" Breaks GitHub CI build on Ubuntu 20.04.
-
-This reverts commit 27f43f8feab503c86f6022d7ff209b1d749fa13e.
----
- Source/Lib/Decoder/pkg-config.pc.in | 3 +--
- Source/Lib/Encoder/pkg-config.pc.in | 3 +--
- 2 files changed, 2 insertions(+), 4 deletions(-)
-
-diff --git a/Source/Lib/Decoder/pkg-config.pc.in b/Source/Lib/Decoder/pkg-config.pc.in
-index da330911..021dbffb 100644
---- a/Source/Lib/Decoder/pkg-config.pc.in
-+++ b/Source/Lib/Decoder/pkg-config.pc.in
-@@ -6,7 +6,6 @@ libdir=@SVT_AV1_LIBDIR@
- Name: SvtAv1Dec
- Description: SVT (Scalable Video Technology) for AV1 decoder library
- Version: @DEC_VERSION_MAJOR@.@DEC_VERSION_MINOR@.@DEC_VERSION_PATCH@
--Libs: -L${libdir} -lSvtAv1Dec
--Libs.private: @LIBS_PRIVATE@
-+Libs: -L${libdir} -lSvtAv1Dec @LIBS_PRIVATE@
- Cflags: -I${includedir}/svt-av1@DEC_PKG_CONFIG_EXTRA_CFLAGS@
- Cflags.private: -UEB_DLL
-diff --git a/Source/Lib/Encoder/pkg-config.pc.in b/Source/Lib/Encoder/pkg-config.pc.in
-index ccd71472..47f55686 100644
---- a/Source/Lib/Encoder/pkg-config.pc.in
-+++ b/Source/Lib/Encoder/pkg-config.pc.in
-@@ -6,7 +6,6 @@ libdir=@SVT_AV1_LIBDIR@
- Name: SvtAv1Enc
- Description: SVT (Scalable Video Technology) for AV1 encoder library
- Version: @ENC_VERSION_MAJOR@.@ENC_VERSION_MINOR@.@ENC_VERSION_PATCH@
--Libs: -L${libdir} -lSvtAv1Enc
--Libs.private: @LIBS_PRIVATE@
-+Libs: -L${libdir} -lSvtAv1Enc @LIBS_PRIVATE@
- Cflags: -I${includedir}/svt-av1@ENC_PKG_CONFIG_EXTRA_CFLAGS@
- Cflags.private: -UEB_DLL
--- 
-2.37.1 (Apple Git-137.1)
-
diff --git a/contrib/svt-av1/A01-sad8xhx4d_neon-crash-fix.patch b/contrib/svt-av1/A01-sad8xhx4d_neon-crash-fix.patch
deleted file mode 100644
index 3c657a778f9c..000000000000
--- a/contrib/svt-av1/A01-sad8xhx4d_neon-crash-fix.patch
+++ /dev/null
@@ -1,42 +0,0 @@
-From 0b16fb20273ba4c0aa744aaa5df808bcfb01d84b Mon Sep 17 00:00:00 2001
-From: Prasant Singh <prasant.singh@ittiam.com>
-Date: Mon, 11 Dec 2023 17:56:49 +0530
-Subject: [PATCH] Fixes for issue 2131
-
-The sad8xhx4d_neon function assumed a minimum block height of 2,
-leading to a segmentation fault when encountering blocks with a height
-of 1. This function will now accept all heights.
----
- Source/Lib/Encoder/ASM_NEON/EbComputeSAD_neon.c | 16 +++++++---------
- 1 file changed, 7 insertions(+), 9 deletions(-)
-
-diff --git a/Source/Lib/Encoder/ASM_NEON/EbComputeSAD_neon.c b/Source/Lib/Encoder/ASM_NEON/EbComputeSAD_neon.c
-index 7f2d91884..061dd382d 100644
---- a/Source/Lib/Encoder/ASM_NEON/EbComputeSAD_neon.c
-+++ b/Source/Lib/Encoder/ASM_NEON/EbComputeSAD_neon.c
-@@ -514,15 +514,13 @@ static INLINE uint32x4_t sad8xhx4d_neon(const uint8_t *src, uint32_t src_stride,
-     uint8x8_t  s;
-     uint32_t   i, ref_offset;
- 
--    s      = vld1_u8(src);
--    sum[0] = vabdl_u8(s, vld1_u8(ref + 0));
--    sum[1] = vabdl_u8(s, vld1_u8(ref + 1));
--    sum[2] = vabdl_u8(s, vld1_u8(ref + 2));
--    sum[3] = vabdl_u8(s, vld1_u8(ref + 3));
--
--    src += src_stride;
--    ref_offset = ref_stride;
--    i          = h - 1;
-+    sum[0] = vdupq_n_u16(0);
-+    sum[1] = vdupq_n_u16(0);
-+    sum[2] = vdupq_n_u16(0);
-+    sum[3] = vdupq_n_u16(0);
-+
-+    ref_offset = 0;
-+    i          = h;
-     do {
-         s      = vld1_u8(src);
-         sum[0] = vabal_u8(sum[0], s, vld1_u8(ref + 0 + ref_offset));
--- 
-GitLab
-
diff --git a/contrib/svt-av1/module.defs b/contrib/svt-av1/module.defs
index 250c9875442f..a8cf8cf5c1d3 100644
--- a/contrib/svt-av1/module.defs
+++ b/contrib/svt-av1/module.defs
@@ -1,9 +1,9 @@
 $(eval $(call import.MODULE.defs,SVT-AV1,svt-av1))
 $(eval $(call import.CONTRIB.defs,SVT-AV1))
 
-SVT-AV1.FETCH.url     = https://github.com/HandBrake/HandBrake-contribs/releases/download/contribs/SVT-AV1-v1.8.0.tar.gz
-SVT-AV1.FETCH.url    += https://gitlab.com/AOMediaCodec/SVT-AV1/-/archive/v1.8.0/SVT-AV1-v1.8.0.tar.gz
-SVT-AV1.FETCH.sha256  = 6b1f8a92f8f2767bf19144d5a2f42a0fcd90433a49311ad314f7e75bbb71dcb2
+SVT-AV1.FETCH.url     = https://github.com/HandBrake/HandBrake-contribs/releases/download/contribs/SVT-AV1-v2.0.0.tar.gz
+SVT-AV1.FETCH.url    += https://gitlab.com/AOMediaCodec/SVT-AV1/-/archive/v2.0.0/SVT-AV1-v2.0.0.tar.gz
+SVT-AV1.FETCH.sha256  = 1ff917e2c866bd35dc9c35fd416575a4fbb0a2605878465e1a0e838dbd882082
 
 SVT-AV1.build_dir             = build
 SVT-AV1.CONFIGURE.exe         = cmake
diff --git a/libhb/common.c b/libhb/common.c
index 53bdea8b362d..d34a47e7eccf 100644
--- a/libhb/common.c
+++ b/libhb/common.c
@@ -1656,10 +1656,6 @@ int hb_video_encoder_get_count_of_analysis_passes(int encoder)
 {
     switch (encoder)
     {
-        case HB_VCODEC_SVT_AV1:
-        case HB_VCODEC_SVT_AV1_10BIT:
-            return 2;
-
         default:
             return 1;
     }
diff --git a/libhb/encsvtav1.c b/libhb/encsvtav1.c
index f6f2e051d17b..99f28ac45221 100644
--- a/libhb/encsvtav1.c
+++ b/libhb/encsvtav1.c
@@ -42,8 +42,6 @@ struct hb_work_private_s
     EbComponentType            *svt_handle;
     EbBufferHeaderType         *in_buf;
 
-    int eos_flag;
-
     struct {
         int64_t duration;
     } frame_info[FRAME_INFO_SIZE];
@@ -293,25 +291,9 @@ int encsvtInit(hb_work_object_t *w, hb_job_t *job)
         job->pass_id == HB_PASS_ENCODE_FINAL)
     {
         hb_interjob_t *interjob = hb_interjob_get(job->h);
-
-        if (job->pass_id == HB_PASS_ENCODE_ANALYSIS)
-        {
-            if (interjob->context == NULL)
-            {
-                param->pass = 1;
-            }
-            else
-            {
-                param->pass = 2;
-            }
-        }
-        else
-        {
-            param->pass = 3;
-        }
-
         param->rc_stats_buffer.buf = interjob->context;
         param->rc_stats_buffer.sz  = interjob->context_size;
+        param->pass = job->pass_id == HB_PASS_ENCODE_ANALYSIS ? 1 : 2;
     }
 
     svt_ret = svt_av1_enc_set_parameter(pv->svt_handle, &pv->enc_params);
@@ -508,68 +490,70 @@ static int send(hb_work_object_t *w, hb_buffer_t *in)
     return 0;
 }
 
-static hb_buffer_t * receive(hb_work_object_t *w)
+static int receive(hb_work_object_t *w, hb_buffer_t **out, int done)
 {
     hb_work_private_t  *pv = w->private_data;
     EbBufferHeaderType *headerPtr;
     EbErrorType svt_ret;
-    hb_buffer_t *out;
+    hb_buffer_t *buf;
 
-    if (pv->eos_flag == 1)
+    svt_ret = svt_av1_enc_get_packet(pv->svt_handle, &headerPtr, done);
+    if (svt_ret == EB_NoErrorEmptyQueue)
     {
-        return NULL;
+        *out = NULL;
+        return 1;
     }
 
-    svt_ret = svt_av1_enc_get_packet(pv->svt_handle, &headerPtr, pv->eos_flag);
-    if (svt_ret == EB_NoErrorEmptyQueue)
+    if (headerPtr->flags & EB_BUFFERFLAG_EOS)
     {
-        return NULL;
+        svt_av1_enc_release_out_buffer(&headerPtr);
+        *out = NULL;
+        return 2;
     }
 
-    out = hb_buffer_init(headerPtr->n_filled_len);
-    if (out == NULL)
+    buf = hb_buffer_init(headerPtr->n_filled_len);
+    if (buf == NULL)
     {
         hb_error("encsvtav1: failed to allocate output packet");
-        return NULL;
+        svt_av1_enc_release_out_buffer(&headerPtr);
+        *out = NULL;
+        return 2;
     }
 
-    memcpy(out->data, headerPtr->p_buffer, headerPtr->n_filled_len);
+    memcpy(buf->data, headerPtr->p_buffer, headerPtr->n_filled_len);
 
-    out->size            = headerPtr->n_filled_len;
-    out->s.start         = headerPtr->pts;
-    out->s.duration      = get_frame_duration(pv);
-    out->s.stop          = out->s.start + out->s.duration;
-    out->s.renderOffset  = headerPtr->dts;
+    buf->size            = headerPtr->n_filled_len;
+    buf->s.start         = headerPtr->pts;
+    buf->s.duration      = get_frame_duration(pv);
+    buf->s.stop          = buf->s.start + buf->s.duration;
+    buf->s.renderOffset  = headerPtr->dts;
 
     // SVT-AV1 doesn't always respect forced keyframes,
     // so always check for chapters
-    hb_chapter_dequeue(pv->chapter_queue, out);
+    hb_chapter_dequeue(pv->chapter_queue, buf);
 
     switch (headerPtr->pic_type)
     {
         case EB_AV1_KEY_PICTURE:
-            out->s.flags |= HB_FLAG_FRAMETYPE_KEY;
+            buf->s.flags |= HB_FLAG_FRAMETYPE_KEY;
             // fall-through
         case EB_AV1_INTRA_ONLY_PICTURE:
-            out->s.frametype = HB_FRAME_IDR;
+            buf->s.frametype = HB_FRAME_IDR;
             break;
         default:
-            out->s.frametype = HB_FRAME_P;
+            buf->s.frametype = HB_FRAME_P;
             break;
     }
 
     if (headerPtr->pic_type != EB_AV1_NON_REF_PICTURE)
     {
-        out->s.flags |= HB_FLAG_FRAMETYPE_REF;
-    }
-
-    if (headerPtr->flags & EB_BUFFERFLAG_EOS)
-    {
-        pv->eos_flag = 1;
+        buf->s.flags |= HB_FLAG_FRAMETYPE_REF;
     }
 
     svt_av1_enc_release_out_buffer(&headerPtr);
-    return out;
+
+    *out = buf;
+    return 0;
 }
 
 static void encode(hb_work_object_t *w, hb_buffer_t *in, hb_buffer_list_t *list)
@@ -577,7 +561,7 @@ static void encode(hb_work_object_t *w, hb_buffer_t *in, hb_buffer_list_t *list)
     send(w, in);
 
     hb_buffer_t *out;
-    while ((out = receive(w)))
+    while (receive(w, &out, 0) == 0)
     {
         hb_buffer_list_append(list, out);
     }
@@ -591,9 +575,10 @@ static void flush(hb_work_object_t *w, hb_buffer_t *in, hb_buffer_list_t *list)
 
     send(w, in);
 
-    while (pv->eos_flag == 0)
+    hb_buffer_t *out = NULL;
+
+    while (receive(w, &out, 1) == 0)
     {
-        hb_buffer_t *out = receive(w);
         hb_buffer_list_append(list, out);
     }
 
